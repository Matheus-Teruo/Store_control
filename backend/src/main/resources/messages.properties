# request valid
request.validation.customer.donationValue.notnull=Debit is required
request.validation.customer.donationValue.positiveOrZero=Donation cannot have a negative value
request.validation.customer.donationValue.digits=The increment must contain {fraction} decimal digits and a value below {fraction} digits
request.validation.customer.refundValue.notnull=Refund is required
request.validation.customer.refundValue.positiveOrZero=Refund cannot have a negative value
request.validation.customer.refundValue.digits=The increment must contain {fraction} decimal digits and a value below {fraction} digits
request.validation.customer.orderCardId.notnull=Card ID is required
request.validation.customer.orderCardId.pattern=Card ID must be exactly 15 normal characters
request.validation.customer.cashRegisterUuid.notnull=Cash register ID is required

request.validation.orderCard.cardId.notnull=Card ID is required
request.validation.orderCard.cardId.pattern=Card ID must be exactly 15 normal characters

request.validation.createItem.productUuid.notnull=UUID of product is required
request.validation.createItem.quantity.notnull=Quantity is required
request.validation.createItem.quantity.positiveOrZero=Quantity cannot have a negative value
request.validation.createItem.delivered.notnull=Delivered is required
request.validation.createItem.delivered.positiveOrZero=Delivered cannot have a negative value
request.validation.createItem.unitPrice.notnull=Unit price is required
request.validation.createItem.unitPrice.positiveOrZero=Unit price cannot have a negative price
request.validation.createItem.unitPrice.digits=The unit price must contain {fraction} decimal digits and a value below {fraction} digits
request.validation.createItem.discount.notnull=Discount is required
request.validation.createItem.discount.positiveOrZero=Unit price cannot have a negative price
request.validation.createItem.discount.digits=The unit price must contain {fraction} decimal digits and a value below {fraction} digits

request.validation.createPurchase.onOrder.notnull=OnOrder boolean value is required
request.validation.createPurchase.items.notnull=Items are required
request.validation.createPurchase.orderCardId.notnull=Card ID is required
request.validation.createPurchase.orderCardId.pattern=Card ID must be exactly 15 normal characters

request.validation.updateItem.productUuid.notnull=UUID of product is required
request.validation.updateItem.delivered.positiveOrZero=Delivered cannot have a negative value

request.validation.updatePurchase.uuid.notnull=UUID is required

request.validation.createRecharge.rechargeValue.notnull=Recharge value is required
request.validation.createRecharge.rechargeValue.positive=Recharge can't be zero or negative value
request.validation.createRecharge.rechargeValue.digits=The value must contain {fraction} decimal digits and a value below {fraction} digits
request.validation.createRecharge.paymentTypeEnum.notBlank=PaymentType is required
request.validation.createRecharge.orderCardId.notBlank=Card ID is required
request.validation.createRecharge.orderCardId.pattern=Card ID must be exactly 15 normal characters
request.validation.createRecharge.cashRegisterUuid.notnull=Cash Register ID is required

request.validation.createTransaction.amount.notnull=Transaction amount value is required
request.validation.createTransaction.amount.positive=Amount can't be zero or negative value
request.validation.createTransaction.amount.digits=The value must contain {fraction} decimal digits and a value below {fraction} digits
request.validation.createTransaction.transactionTypeEnum.notBlank=TransactionType is required
request.validation.createTransaction.cashRegisterUuid.notnull=Cash Register ID is required

request.validation.deleteRecharge.uuid.notnull=UUID is required

request.validation.deleteTransaction.uuid.notnull=UUID is required

request.validation.createCashRegister.cashRegisterName.notBlank=Name of register is required
request.validation.createCashRegister.cashRegisterName.size=Register name must contain at least {min} characters
request.validation.createCashRegister.cashRegisterName.pattern=Register name must contain only letters, numbers and space

request.validation.updateCashRegister.uuid.notnull=UUID is required
request.validation.createCashRegister.cashRegisterName.size=Register name must contain at least {min} characters
request.validation.updateCashRegister.cashRegisterName.pattern=Register name must contain only letters, numbers and space

request.validation.createAssociation.associationName.notBlank=Name of association is required
request.validation.createAssociation.associationName.size=Association name must contain at least {min} characters
request.validation.createAssociation.associationName.pattern=Association name must contain only letters and space
request.validation.createAssociation.principalName.notBlank=Name of principal is required
request.validation.createAssociation.principalName.size=Principal name must contain at least {min} characters
request.validation.createAssociation.principalName.pattern=Principal name must contain only letters and space

request.validation.createProduct.productName.notBlank=Name of product is required
request.validation.createProduct.productName.size=Product name must contain at least {min} characters
request.validation.createProduct.productName.pattern=Product name must contain only letters, numbers and space
request.validation.createProduct.summary.size=Summary must contain at least {min} characters and not exceed {max} characters
request.validation.createProduct.summary.pattern=Summary must contain only letters, numbers, space and some text characters
request.validation.createProduct.description.size=Description must contain at least {min} characters
request.validation.createProduct.description.pattern=Description must contain only letters, numbers, space and some text characters
request.validation.createProduct.price.notnull=Product price is required
request.validation.createProduct.price.positiveOrZero=Product cannot have a negative price
request.validation.createProduct.price.digits=The price must contain {fraction} decimal digits and a value below {fraction} digits
request.validation.createProduct.stock.notnull=Quantity in stock is required
request.validation.createProduct.stock.positiveOrZero=Product cannot have negative stock
request.validation.createProduct.standUuid.notnull=Product must be related to a stand

request.validation.createStand.standName.notBlank=Name of stand is required
request.validation.createStand.standName.size=Stand name must contain at least {min} characters
request.validation.createStand.standName.pattern=Stand name must contain only letters, numbers and space
request.validation.createStand.associationUuid.notnull=Stand must be related to an association

request.validation.updateAssociation.uuid.notnull=UUID is required
request.validation.updateAssociation.associationName.size=Association name must contain at least {min} characters
request.validation.updateAssociation.associationName.pattern=Association name must contain only letters and space
request.validation.updateAssociation.principalName.size=Principal name must contain at least {min} characters
request.validation.updateAssociation.principalName.pattern=Principal name must contain only letters and space

request.validation.updateProduct.uuid.notnull=UUID is required
request.validation.updateProduct.productName.size=Product name must contain at least {min} characters
request.validation.updateProduct.productName.pattern=Product name must contain only letters, numbers and space
request.validation.updateProduct.summary.size=Summary must contain at least {min} characters and not exceed {max} characters
request.validation.updateProduct.summary.pattern=Summary must contain only letters, numbers, space and some text characters
request.validation.updateProduct.description.size=Description must contain at least {min} characters
request.validation.updateProduct.description.pattern=Description must contain only letters, numbers, space and some text characters
request.validation.updateProduct.price.positiveOrZero=Product cannot have a negative price
request.validation.updateProduct.price.digits=The price must contain {fraction} decimal digits and a value below {fraction} digits
request.validation.updateProduct.discount.positiveOrZero=Product cannot have a negative discount
request.validation.updateProduct.discount.digits=The discount must contain {fraction} decimal digits and a value below {fraction} digits
request.validation.updateProduct.stock.positiveOrZero=Product cannot have negative stock

request.validation.updateStand.uuid.notnull=UUID is required
request.validation.updateStand.standName.size=Stand name must contain at least {min} characters
request.validation.updateStand.standName.pattern=Stand name must contain only letters, numbers and space

request.validation.loginVoluntary.username.notBlank=Username is required
request.validation.loginVoluntary.username.size=Username must contain at least {min} characters
request.validation.loginVoluntary.username.pattern=Username must contain only letters and numbers
request.validation.loginVoluntary.password.notBlank=Password is required

request.validation.roleVoluntary.uuid.notnull=UUID is required
request.validation.roleVoluntary.voluntaryRole.notBlank=Voluntary Role is required

request.validation.signupVoluntary.username.notBlank=Username is required
request.validation.signupVoluntary.username.size=Username must contain at least {min} characters
request.validation.signupVoluntary.username.pattern=Username must contain only letters and numbers
request.validation.signupVoluntary.password.notBlank=Password is required
request.validation.signupVoluntary.password.size=Password must contain at least {min} characters
request.validation.signupVoluntary.password.pattern=Password must contain only letters, numbers and some special characters
request.validation.signupVoluntary.fullname.notBlank=Fullname is required
request.validation.signupVoluntary.fullname.size=Fullname must contain at least {min} characters
request.validation.signupVoluntary.fullname.pattern=Fullname must contain only letters and space

request.validation.updateVoluntary.uuid.notnull=UUID is required
request.validation.updateVoluntary.username.size=Username must contain at least {min} characters
request.validation.updateVoluntary.username.pattern=Username must contain only letters and numbers
request.validation.updateVoluntary.password.size=Password must contain at least {min} characters
request.validation.updateVoluntary.password.pattern=Password must contain only letters, numbers and some special characters
request.validation.updateVoluntary.fullname.size=Fullname must contain at least {min} characters
request.validation.updateVoluntary.fullname.pattern=Fullname must contain only letters and space

request.validation.updateVoluntaryFunction.uuid.notnull=UUID is required
request.validation.updateVoluntaryFunction.functionUuid.notnull=FunctionUUID is required

# service errors
service.exception.customerFinalization.finalization.validation.error=Customer finalization
service.exception.customerFinalization.finalization.validation.message=Sum of donation and refund is not equal remaining debit
service.exception.customerFinalization.undoFinalization.validation.error=Undo customer finalization
service.exception.customerFinalization.undoFinalization.validation.message=Customer still in use

service.exception.customer.get.validation.error=Entity not active
service.exception.customer.get.validation.message=Customer OrderCard
service.exception.customer.finalize.validation.error=Customer finalization
service.exception.customer.finalize.validation.message=Debt has not been cleared

service.exception.oderCard.get.validation.error=Non-existent entity
service.exception.oderCard.get.validation.message=OrderCard

service.exception.purchase.get.validation.error=Non-existent entity
service.exception.purchase.get.validation.message=Purchase

service.exception.recharge.get.validation.error=Non-existent entity
service.exception.recharge.get.validation.message=Recharge

service.exception.transaction.get.validation.error=Non-existent entity
service.exception.transaction.get.validation.message=Transaction

service.exception.cashRegister.get.validation.error=Non-existent entity
service.exception.cashRegister.get.validation.message=Cash Register

service.exception.association.get.validation.error=Non-existent entity
service.exception.association.get.validation.message=Association

service.exception.product.get.validation.error=Non-existent entity
service.exception.product.get.validation.message=Product

service.exception.stand.get.validation.error=Non-existent entity
service.exception.stand.get.validation.message=Stand

service.exception.function.get.validation.error=Non-existent entity
service.exception.function.get.validation.message=Function

service.exception.voluntary.get.validation.error=Non-existent entity
service.exception.voluntary.get.validation.message=Voluntary

# validation
validation.customerFinalization.checkVoluntary.functionNull.error=Finalize Customer
validation.customerFinalization.checkVoluntary.functionNull.message=This voluntary has no role
validation.customerFinalization.checkVoluntary.functionDifferent.error=Finalize Customer
validation.customerFinalization.checkVoluntary.functionDifferent.message=This voluntary can't do this operation
validation.customerFinalization.checkDonation.donationInvalid.error=Donation
validation.customerFinalization.checkDonation.donationInvalid.message=Donation value is greater than the current debit amount
validation.customerFinalization.checkRefund.refundInvalid.error=Refund
validation.customerFinalization.checkRefund.refundInvalid.message=Refund value is greater than the amount available to refund
validation.customerFinalization.checkRefund.refundInsufficientDebit.error=Refund
validation.customerFinalization.checkRefund.refundInsufficientDebit.message=Refund value is greater than the remaining debit

validation.orderCard.checkName.nameDuplication.error=Card ID already exist
validation.orderCard.checkName.nameDuplication.message=Order Card
validation.orderCard.checkName.nameDuplication.field=Card ID

validation.donation.checkVoluntary.functionNull.error=Create Donation
validation.donation.checkVoluntary.functionNull.message=This voluntary has no role
validation.donation.checkVoluntary.functionDifferent.error=Create Donation
validation.donation.checkVoluntary.functionDifferent.message=This voluntary has no role

validation.purchase.checkVoluntary.functionNull.error=Create Donation
validation.purchase.checkVoluntary.functionNull.message=This voluntary has no role
validation.purchase.checkVoluntary.functionDifferent.error=Create Donation
validation.purchase.checkVoluntary.functionDifferent.message=This voluntary can't do this operation
validation.purchase.checkItem.productNull.error=Non-existent entity
validation.purchase.checkItem.productNull.message=Product
validation.purchase.checkItem.priceDifferent.error=Create Purchase
validation.purchase.checkItem.priceDifferent.message=Price of product {0} can't change without authorization
validation.purchase.checkItem.discountDifferent.error=Create Purchase
validation.purchase.checkItem.discountDifferent.message=Discount of product {0} can't change without authorization
validation.purchase.checkDebit.insufficientDebit.error=Create Purchase
validation.purchase.checkDebit.insufficientDebit.message=Insufficient credit on card
validation.purchase.checkQuantity.null.error=Create Purchase
validation.purchase.checkQuantity.null.message=Quantity can't be 0
validation.purchase.checkQuantity.noItem.error=Create Purchase
validation.purchase.checkQuantity.noItem.message=Purchase can't be empty
validation.purchase.checkProduct.insufficientStock.error=Create Purchase
validation.purchase.checkProduct.insufficientStock.message=Insufficient product stock
validation.purchase.checkItem.deliveredInvalid.error=Update Purchase
validation.purchase.checkItem.deliveredInvalid.message=Delivered not allow to be bigger than quantity
validation.purchase.checkItem.productNotMatch.error=Update Purchase
validation.purchase.checkItem.productNotMatch.message=The product {0} is not allocate in this purchase like item
validation.purchase.checkItem.deliveredNotZero.error=Delete Purchase
validation.purchase.checkItem.deliveredNotZero.message=One item was delivered already
validation.purchase.checkVoluntary.notOwner.error=Delete Purchase
validation.purchase.checkVoluntary.notOwner.message=This purchase don't belong to this voluntary
validation.purchase.checkLastPurchase.notLast.error=Delete Purchase
validation.purchase.checkLastPurchase.notLast.message=This purchase is not the last form this voluntary
validation.purchase.checkLastPurchase.notPresent.error=Delete Purchase
validation.purchase.checkLastPurchase.notPresent.message=This voluntary don't have any purchase done

validation.recharge.checkVoluntary.functionNull.error=Create Recharge
validation.recharge.checkVoluntary.functionNull.message=This voluntary has no role
validation.recharge.checkVoluntary.functionDifferent.error=Create Recharge
validation.recharge.checkVoluntary.functionDifferent.message=This voluntary can't do this operation
validation.recharge.checkDebit.notEnoughDebit.error=Delete Recharge
validation.recharge.checkDebit.notEnoughDebit.message=Customer does not have enough debit to undo the recharge
validation.recharge.checkVoluntary.notOwner.error=Delete Recharge
validation.recharge.checkVoluntary.notOwner.message=This recharge don't belong to this voluntary
validation.recharge.checkLastPurchase.notLast.error=Delete Recharge
validation.recharge.checkLastPurchase.notLast.message=This recharge is not the last form this voluntary
validation.recharge.checkLastPurchase.notPresent.error=Delete Recharge
validation.recharge.checkLastPurchase.notPresent.message=This voluntary don't have any recharge done

validation.refund.checkVoluntary.functionNull.error=Create Refund
validation.refund.checkVoluntary.functionNull.message=This voluntary has no role
validation.refund.checkVoluntary.functionDifferent.error=Create Refund
validation.refund.checkVoluntary.functionDifferent.message=This voluntary can't do this operation

validation.transaction.checkCash.notEnoughCash.error=Create Transaction
validation.transaction.checkCash.notEnoughCash.message=Insufficient cash to transaction
validation.transaction.checkVoluntary.functionNull.error=Create Refund
validation.transaction.checkVoluntary.functionNull.message=This voluntary has no role
validation.transaction.checkVoluntary.functionDifferent.error=Create Refund
validation.transaction.checkVoluntary.functionDifferent.message=This voluntary can't do this operation
validation.transaction.checkVoluntary.notOwner.error=Delete Transaction
validation.transaction.checkVoluntary.notOwner.message=This transaction don't belong to this voluntary
validation.transaction.checkLastTransaction.notLast.error=Delete Recharge
validation.transaction.checkLastPurchase.notLast.message=This transaction is not the last form this voluntary
validation.transaction.checkLastPurchase.notPresent.error=Delete Recharge
validation.transaction.checkLastPurchase.notPresent.message=This voluntary don't have any transaction done

validation.cashRegister.checkName.nameDuplication.error=Name of cash register already used
validation.cashRegister.checkName.nameDuplication.message=Cash Register
validation.cashRegister.checkName.nameDuplication.field=Function Name

validation.association.checkName.nameDuplication.error=Name of association already used
validation.association.checkName.nameDuplication.message=Association
validation.association.checkName.nameDuplication.field=Association Name

validation.product.checkName.nameDuplication.error=Name of product already used
validation.product.checkName.nameDuplication.message=Product
validation.product.checkName.nameDuplication.field=Product Name

validation.stand.checkName.nameDuplication.error=Name of stand already used
validation.stand.checkName.nameDuplication.message=Stand
validation.stand.checkName.nameDuplication.field=Stand Name

validation.voluntary.checkAuthentication.voluntaryMatch.error=User not allow
validation.voluntary.checkAuthentication.voluntaryMatch.message=Voluntary Request
validation.voluntary.checkUsername.nameDuplication.error=Name of username already used
validation.voluntary.checkUsername.nameDuplication.message=Voluntary
validation.voluntary.checkUsername.nameDuplication.field=Username
validation.voluntary.checkFullname.nameDuplication.error=This Full Name already exist
validation.voluntary.checkFullname.nameDuplication.message=Voluntary
validation.voluntary.checkFullname.nameDuplication.field=Fullname
validation.voluntary.checkManagementFunction.invalid.error=The management need to be in the same function that voluntary
validation.voluntary.checkManagementFunction.invalid.message=Voluntary
validation.voluntary.checkManagementFunction.invalid.field=Function

# exception
exception.customer.message=Invalid manipulation on Customer on {0}
exception.database.insertion.message=Fail to create entity: {0} . Field(s) error: {1}
exception.database.query.message=Invalid value for entity: {0}: {1}
exception.operation.message=Invalid operation on {0}

exception.global.methodNotValid.errorType=Validation Error
exception.global.customerException.errorType=Customer Status
exception.global.operationException.errorType=Operation Error
exception.global.insertEntity.errorType=Insertion Entity Error
exception.global.queryEntity.errorType=Query Entity Error