services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env  # double check to confirm the existence of a .env
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://${DATABASE_HOST}:3306/${DATABASE_DB}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
    networks:
      - public
      - private
    depends_on:
      - db
  db:
    image: mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: always
    env_file:
      - .env  # double check to confirm the existence of a .env
    volumes:
      - db-data:/var/lib/mysql
      - ./db/export:/var/lib/mysql-files
    ports:
      - 3307:3306
    networks:
      - private
    environment:
      - MYSQL_DATABASE=${DATABASE_DB}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD_ROOT}
  frontend:
    build:
      context: frontend
      target: development
    ports:
      - 3000:3000
    volumes:
      - frontend-node:/code/node_modules
      - ./frontend/src:/code/src
      - ./frontend/package.json:/code/package.json
      - ./frontend/package-lock.json:/code/package-lock.json
    networks:
      - public
    environment:
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
  table_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: table-service-container
    networks:
      - private
    restart: unless-stopped
    volumes:
      - ./app:/app
    command: python main.py
networks:
  public:
  private:
volumes:
  backend-target:
  db-data:
  frontend-node:
